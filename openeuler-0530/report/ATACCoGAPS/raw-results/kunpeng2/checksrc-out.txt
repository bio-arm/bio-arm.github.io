##############################################################################
##############################################################################
###
### Running command:
###
###   /home/biocbuild/R/R-4.3.0/bin/R CMD check --install=check:ATACCoGAPS.install-out.txt --library=/home/biocbuild/R/R-4.3.0/site-library --timings ATACCoGAPS_1.3.0.tar.gz
###
##############################################################################
##############################################################################


* using log directory ‘/home/biocbuild/bbs-3.18-bioc/meat/ATACCoGAPS.Rcheck’
* using R version 4.3.0 (2023-04-21)
* using platform: aarch64-unknown-linux-gnu (64-bit)
* R was compiled by
    gcc (GCC) 10.3.1
    GNU Fortran (GCC) 10.3.1
* running under: openEuler 22.03 (LTS-SP1)
* using session charset: UTF-8
* checking for file ‘ATACCoGAPS/DESCRIPTION’ ... OK
* this is package ‘ATACCoGAPS’ version ‘1.3.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘ATACCoGAPS’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
cgapsPlot: no visible global function definition for ‘rainbow’
cgapsPlot: no visible global function definition for ‘par’
cgapsPlot: no visible global function definition for ‘legend’
findOverlap: no visible global function definition for ‘queryHits’
geneAccessibility: no visible global function definition for
  ‘subjectHits’
heatmapGeneAccessibility: no visible global function definition for
  ‘rainbow’
heatmapPatternMarkers: no visible global function definition for
  ‘rainbow’
heatmapPatternMatrix: no visible global function definition for
  ‘rainbow’
paths: no visible global function definition for ‘p.adjust’
Undefined global functions or variables:
  legend p.adjust par queryHits rainbow subjectHits
Consider adding
  importFrom("grDevices", "rainbow")
  importFrom("graphics", "legend", "par")
  importFrom("stats", "p.adjust")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking R/sysdata.rda ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘ATACCoGAPS-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: applyGREAT
> ### Title: Find Enrichment of GO Terms in PatternMarker Peaks using GREAT
> ### Aliases: applyGREAT
> 
> ### ** Examples
> 
> data("schepCogapsResult")
> data(schepGranges)
> 
> GOenrichment <- applyGREAT(cogapsResult = schepCogapsResult,
+  granges = schepGranges, genome = "hg19")
The default enrichment table does not contain informatin of associated
genes for each input region. You can set `download_by = 'tsv'` to
download the complete table, but note only the top 500 regions can be
retreived. See the following link:

https://great-help.atlassian.net/wiki/spaces/GREAT/pages/655401/Export#Export-GlobalExport

Except the additional gene-region association column if taking 'tsv' as
the source of result, all other columns are the same if you choose
'json' (the default) as the source. Or you can try the local GREAT
analysis with the function `great()`.
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ...
  ‘ATACCoGAPS.Rmd’ using ‘UTF-8’... OK
 NONE
* checking re-building of vignette outputs ... ERROR
Error(s) in re-building vignettes:
  ...
--- re-building ‘ATACCoGAPS.Rmd’ using rmarkdown

* checking PDF version of manual ... OK
* DONE

Status: 2 ERRORs, 1 NOTE
See
  ‘/home/biocbuild/bbs-3.18-bioc/meat/ATACCoGAPS.Rcheck/00check.log’
for details.

